<?php
include('db_connect.php'); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
if ($conn->connect_error) {
    die("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: " . $conn->connect_error);
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –æ—Ç–ø—É—Å–∫–æ–≤ –≤ CSV
function exportVacationsToCSV($conn) {
    $query = "SELECT * FROM Vacations ORDER BY start_date ASC";
    $result = $conn->query($query);
    $filename = "vacations_report_" . date("Y-m-d") . ".csv";

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
    header('Content-Type: text/csv; charset=utf-8');
    header('Content-Disposition: attachment; filename="' . $filename . '"');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ç–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
    $output = fopen('php://output', 'w');

    // –î–æ–±–∞–≤–ª—è–µ–º BOM –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Excel
    fprintf($output, chr(0xEF) . chr(0xBB) . chr(0xBF));

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    fputcsv($output, ['ID', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫', '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞', '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', '–¢–∏–ø –æ—Ç–ø—É—Å–∫–∞']);

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    while ($row = $result->fetch_assoc()) {
        fputcsv($output, [
            $row['id'],
            $row['full_name'],
            $row['start_date'],
            $row['end_date'],
            $row['type']
        ]);
    }

    fclose($output);
    exit();
}


// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—Ä–æ—à–µ–Ω –ª–∏ —ç–∫—Å–ø–æ—Ä—Ç
if (isset($_GET['export_all_vacations'])) {
    exportVacationsToCSV($conn);
}




if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['delete_vacation'])) {
    $vacation_id = $_POST['vacation_id'];

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞
    $stmt = $conn->prepare("DELETE FROM Vacations WHERE id = ?");
    $stmt->bind_param("i", $vacation_id);
    $stmt->execute();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
    if ($stmt->affected_rows > 0) {
        echo "<script>alert('–û—Ç–ø—É—Å–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!'); window.location.href = window.location.href;</script>";
    } else {
        echo "<script>alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞'); window.location.href = window.location.href;</script>";
    }
    $stmt->close();
}



if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['add_vacation'])) {
    if (isset($_POST['employee_id']) && !empty($_POST['employee_id'])) {
        $employee_id = $_POST['employee_id']; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        $start_dates = $_POST['start_date'];
        $end_dates = $_POST['end_date'];
        $types = $_POST['type'];

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        $query = "SELECT full_name FROM Employees WHERE id = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("i", $employee_id);
        $stmt->execute();
        $stmt->bind_result($full_name);
        $stmt->fetch();
        $stmt->close();

        // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–ø—É—Å–∫–∞
        for ($i = 0; $i < count($start_dates); $i++) {
            $start_date = $start_dates[$i];
            $end_date = $end_dates[$i];
            $type = $types[$i];

            $stmt = $conn->prepare("INSERT INTO Vacations (employee_id, full_name, start_date, end_date, type) VALUES (?, ?, ?, ?, ?)");
            $stmt->bind_param("issss", $employee_id, $full_name, $start_date, $end_date, $type);

            if (!$stmt->execute()) {
                echo "<script>alert('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞');</script>";
                break;
            }
        }

        echo "<script>alert('–û—Ç–ø—É—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!'); window.location.href = window.location.href;</script>";
        exit;
    } else {
        echo "<script>alert('–ù–µ –≤—ã–±—Ä–∞–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫!');</script>";
    }
}

    
// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–æ–≤
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['edit_vacation'])) {
    $vacation_ids = $_POST['vacation_ids']; // –ú–∞—Å—Å–∏–≤ ID –æ—Ç–ø—É—Å–∫–æ–≤
    $start_date = $_POST['start_date'];
    $end_date = $_POST['end_date'];
    $type = $_POST['type'];

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–ø—É—Å–∫
    foreach ($vacation_ids as $id) {
        $stmt = $conn->prepare("UPDATE Vacations SET start_date=?, end_date=?, type=? WHERE id=?");
        $stmt->bind_param("sssi", $start_date, $end_date, $type, $id);
        if (!$stmt->execute()) {
            echo "<script>alert('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞ —Å ID $id');</script>";
            break;
        }
    }
    
    echo "<script>alert('–û—Ç–ø—É—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!'); window.location.href = window.location.href;</script>";
    exit;
}



// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
$employees = $conn->query("SELECT id, full_name FROM Employees");

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü)
$start_date_filter = isset($_POST['start_date_filter']) ? $_POST['start_date_filter'] : date('Y-m-01');
$end_date_filter = isset($_POST['end_date_filter']) ? $_POST['end_date_filter'] : date('Y-m-t');
$type_filter = isset($_POST['type_filter']) ? $_POST['type_filter'] : '';

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –æ—Ç–ø—É—Å–∫–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥—Å—á—ë—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–ø—É—Å–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
$query = "
   SELECT 
    GROUP_CONCAT(DISTINCT id ORDER BY start_date SEPARATOR ',') AS ids, 
    full_name, 
    COUNT(*) AS vacation_count, 
    GROUP_CONCAT(DISTINCT start_date ORDER BY start_date SEPARATOR ',') AS start_dates, 
    GROUP_CONCAT(DISTINCT end_date ORDER BY end_date SEPARATOR ',') AS end_dates, 
    GROUP_CONCAT(DISTINCT type ORDER BY type SEPARATOR ', ') AS types
FROM 
    Vacations 
WHERE 
    start_date >= ? 
    AND end_date <= ?
";

if ($type_filter) {
    $query .= " AND type = ?";
}

$query .= " GROUP BY full_name";


$stmt = $conn->prepare($query);
if ($type_filter) {
    $stmt->bind_param('sss', $start_date_filter, $end_date_filter, $type_filter);
} else {
    $stmt->bind_param('ss', $start_date_filter, $end_date_filter);
}

$stmt->execute();
$result_vacations = $stmt->get_result();

 



?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–û—Ç–ø—É—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

</head>
<body class="bg-light">
    <div class="container py-5">
        <div class="card p-4 shadow-lg">
            <h1 class="text-center text-primary">–û—Ç–ø—É—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</h1>
            <a href="?export_all_vacations=1" class="btn btn-success mt-3">üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ CSV</a>

           <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–æ–≤ -->
<h2>–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—É—Å–∫</h2>
<form method="POST">
    <div id="vacation_fields">
        <div class="row mb-3 align-items-center">
            <div class="col-md-4">
                <label for="employee_id" class="form-label">–°–æ—Ç—Ä—É–¥–Ω–∏–∫</label>
                <select name="employee_id" class="form-select" required>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</option>
                    <?php while ($emp = $employees->fetch_assoc()) { ?>
                        <option value="<?= htmlspecialchars($emp['id']) ?>"><?= htmlspecialchars($emp['full_name']) ?></option>
                    <?php } ?>
                </select>
            </div>
            <div class="col-md-3">
                <label for="start_date" class="form-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
                <input type="date" name="start_date[]" class="form-control" required>
            </div>
            <div class="col-md-3">
                <label for="end_date" class="form-label">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
                <input type="date" name="end_date[]" class="form-control" required>
            </div>
            <div class="col-md-2">
                <label for="type" class="form-label">–¢–∏–ø –æ—Ç–ø—É—Å–∫–∞</label>
                <select name="type[]" class="form-select" required>
                    <option value="–ï–∂–µ–≥–æ–¥–Ω—ã–π">–ï–∂–µ–≥–æ–¥–Ω—ã–π</option>
                    <option value="–£—á–µ–±–Ω—ã–π">–£—á–µ–±–Ω—ã–π</option>
                    <option value="–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π">–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π</option>
                </select>
            </div>
        </div>
    </div>

    <button type="submit" name="add_vacation" class="btn btn-primary mt-3">–î–æ–±–∞–≤–∏—Ç—å</button>
</form>

<script>
function addVacationField() {
    const vacationFields = document.getElementById('vacation_fields');
    const newField = vacationFields.children[0].cloneNode(true);
    vacationFields.appendChild(newField);
}
</script>




              
            <h2 class="mt-5">–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–ø—É—Å–∫–æ–≤</h2>
            <form method="POST">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <label>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
                        <input type="date" name="start_date_filter" class="form-control" value="<?= $start_date_filter ?>">
                    </div>
                    <div class="col-md-3">
                        <label>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
                        <input type="date" name="end_date_filter" class="form-control" value="<?= $end_date_filter ?>">
                    </div>
                    <div class="col-md-3">
                        <label>–¢–∏–ø –æ—Ç–ø—É—Å–∫–∞</label>
                        <select name="type_filter" class="form-select">
                            <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
                            <option value="–ï–∂–µ–≥–æ–¥–Ω—ã–π" <?= $type_filter == '–ï–∂–µ–≥–æ–¥–Ω—ã–π' ? 'selected' : '' ?>>–ï–∂–µ–≥–æ–¥–Ω—ã–π</option>
                            <option value="–£—á–µ–±–Ω—ã–π" <?= $type_filter == '–£—á–µ–±–Ω—ã–π' ? 'selected' : '' ?>>–£—á–µ–±–Ω—ã–π</option>
                            <option value="–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π" <?= $type_filter == '–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π' ? 'selected' : '' ?>>–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä</button>
                    </div>
                </div>
            </form>

            <table class="table table-bordered">
    <table class="table table-bordered">
    <thead>
        <tr>
            <th>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</th>
            <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—É—Å–∫–æ–≤</th>
            <th data-column="start_dates" class="sortable">
                –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ <span class="sort-icon" data-order="asc">‚ñ≤</span>
            </th>
            <th data-column="end_dates" class="sortable">
                –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è <span class="sort-icon" data-order="asc">‚ñ≤</span>
            </th>
            <th>–¢–∏–ø –æ—Ç–ø—É—Å–∫–∞</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
        </tr>
    </thead>
    <tbody>
    <?php while ($vacation = $result_vacations->fetch_assoc()) { ?>
        <tr>
            <td><?= htmlspecialchars($vacation['full_name']) ?></td>
            <td><?= $vacation['vacation_count'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ' ?></td>
            <td data-timestamp="<?= strtotime(explode("\n", $vacation['start_dates'])[0]) ?>">
                <?= nl2br(htmlspecialchars($vacation['start_dates'])) ?>
            </td>
            <td data-timestamp="<?= strtotime(explode("\n", $vacation['end_dates'])[0]) ?>">
                <?= nl2br(htmlspecialchars($vacation['end_dates'])) ?>
            </td>
            <td><?= htmlspecialchars($vacation['types']) ?></td>
            <td class="text-center">
    <div class="d-flex flex-column gap-2">
        <button class="btn btn-warning btn-sm edit-btn"
            data-ids="<?= htmlspecialchars($vacation['ids']) ?>" 
            data-startdates="<?= htmlspecialchars($vacation['start_dates']) ?>" 
            data-enddates="<?= htmlspecialchars($vacation['end_dates']) ?>" 
            data-types="<?= htmlspecialchars($vacation['types']) ?>"
            data-bs-toggle="modal"
            data-bs-target="#editModal">
            –ò–∑–º–µ–Ω–∏—Ç—å
        </button>
    </div>
</td>
<td class="text-center">
    <div class="d-flex flex-column gap-2">
        <button class="btn btn-danger btn-sm delete-btn" 
                data-ids="<?= htmlspecialchars($vacation['ids']) ?>" 
                data-startdates="<?= htmlspecialchars($vacation['start_dates']) ?>" 
                data-enddates="<?= htmlspecialchars($vacation['end_dates']) ?>" 
                data-types="<?= htmlspecialchars($vacation['types']) ?>"
                data-bs-toggle="modal"
                data-bs-target="#deleteModal">
            –£–¥–∞–ª–∏—Ç—å
        </button>
    </div>
</td>


        </tr>
    <?php } ?>
    </tbody>
</table>



            
        </div>
        </div>
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="POST">
                    <input type="hidden" name="vacation_id" id="vacation_id">
                    <div class="mb-3">
                        <label for="vacation_select" class="form-label">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–ø—É—Å–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è</label>
                        <select class="form-select" id="vacation_select" name="vacation_id" required>
                            <!-- –û–ø—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ JS -->
                        </select>
                    </div>
                    <button type="submit" name="delete_vacation" class="btn btn-danger">–£–¥–∞–ª–∏—Ç—å</button>
                </form>
            </div>
        </div>
    </div>
</div>

    </div>
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="POST">
                    <div class="mb-3">
                        <label for="vacation_select_edit" class="form-label">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–ø—É—Å–∫</label>
                        <select class="form-select" id="vacation_select_edit" name="vacation_ids[]" required>
                            <!-- –û–ø—Ü–∏–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ JS -->
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="start_date_edit" class="form-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
                        <input type="date" id="start_date_edit" name="start_date" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="end_date_edit" class="form-label">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
                        <input type="date" id="end_date_edit" name="end_date" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="type_edit" class="form-label">–¢–∏–ø –æ—Ç–ø—É—Å–∫–∞</label>
                        <select id="type_edit" name="type" class="form-select" required>
                            <option value="–ï–∂–µ–≥–æ–¥–Ω—ã–π">–ï–∂–µ–≥–æ–¥–Ω—ã–π</option>
                            <option value="–£—á–µ–±–Ω—ã–π">–£—á–µ–±–Ω—ã–π</option>
                            <option value="–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π">–ù–µ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π</option>
                        </select>
                    </div>
                    <button type="submit" name="edit_vacation" class="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".sortable").forEach(header => {
        header.addEventListener("click", function () {
            let column = this.dataset.column;
            let order = this.querySelector(".sort-icon").dataset.order;
            let table = document.querySelector("table tbody");
            let rows = Array.from(table.rows);

            rows.sort((rowA, rowB) => {
                let valA = parseInt(rowA.querySelector(`td[data-timestamp]`).dataset.timestamp);
                let valB = parseInt(rowB.querySelector(`td[data-timestamp]`).dataset.timestamp);
                return order === "asc" ? valA - valB : valB - valA;
            });

            rows.forEach(row => table.appendChild(row));

            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
            let icon = this.querySelector(".sort-icon");
            icon.dataset.order = order === "asc" ? "desc" : "asc";
            icon.textContent = order === "asc" ? "‚ñº" : "‚ñ≤";
        });
    });
});
</script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".edit-btn").forEach(button => {
        button.addEventListener("click", function () {
            // –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—É—Å–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤—ã
            let ids = this.dataset.ids.split(',');
            let startDates = this.dataset.startdates.split(',');
            let endDates = this.dataset.enddates.split(',');
            let types = this.dataset.types.split(', ');

            let select = document.getElementById("vacation_select");
            select.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏

            // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Ç–ø—É—Å–∫–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
            ids.forEach((id, index) => {
                let option = document.createElement("option");
                option.value = id;
                option.textContent = `${startDates[index]} - ${endDates[index]} (${types[index]})`;
                select.appendChild(option);
            });

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–ø—É—Å–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            document.getElementById("vacation_id").value = ids[0];
            document.getElementById("edit_start_date").value = startDates[0];
            document.getElementById("edit_end_date").value = endDates[0];
            document.getElementById("edit_type").value = types[0];

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
            select.addEventListener("change", function () {
                let selectedIndex = this.selectedIndex;
                document.getElementById("vacation_id").value = ids[selectedIndex];
                document.getElementById("edit_start_date").value = startDates[selectedIndex];
                document.getElementById("edit_end_date").value = endDates[selectedIndex];
                document.getElementById("edit_type").value = types[selectedIndex];
            });
        });
    });
});
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".delete-btn").forEach(button => {
        button.addEventListener("click", function () {
            // –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—É—Å–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤—ã
            let ids = this.dataset.ids.split(',');
            let startDates = this.dataset.startdates.split(',');
            let endDates = this.dataset.enddates.split(',');
            let types = this.dataset.types.split(', ');

            let select = document.getElementById("vacation_select");
            select.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏

            // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Ç–ø—É—Å–∫–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
            ids.forEach((id, index) => {
                let option = document.createElement("option");
                option.value = id;
                option.textContent = `${startDates[index]} - ${endDates[index]} (${types[index]})`;
                select.appendChild(option);
            });
        });
    });
});


</script>

<a href="index.php" class="btn btn-green rounded-pill shadow-lg d-inline-flex align-items-center px-4 py-2 fw-bold fixed-button">
    <span class="me-2">‚Üê</span> –ù–∞ –≥–ª–∞–≤–Ω—É—é
</a>

<style>
    .btn-green {
        background-color: #28a745; /* –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç */
        color: white;
        font-size: 1.2rem;
        border: none;
    }

    .btn-green:hover {
        background-color: #218838;
        color: white;
    }

    .fixed-button {
        position: fixed;
        top: 20px;  /* –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É */
        left: 20px; /* –û—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞ */
        z-index: 1000; /* –ü–æ–≤–µ—Ä—Ö –≤—Å–µ–≥–æ */
    }
</style>



<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".edit-btn").forEach(button => {
        button.addEventListener("click", function () {
            let vacationIds = this.dataset.ids.split(",");
            let startDates = this.dataset.startdates.split(",");
            let endDates = this.dataset.enddates.split(",");
            let types = this.dataset.types.split(",");

            let vacationSelect = document.getElementById("vacation_select_edit");
            vacationSelect.innerHTML = ""; // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö

            for (let i = 0; i < vacationIds.length; i++) {
                let option = document.createElement("option");
                option.value = vacationIds[i];
                option.textContent = `–û—Ç–ø—É—Å–∫ ${startDates[i]} - ${endDates[i]} (${types[i]})`;
                vacationSelect.appendChild(option);
            }
        });
    });
});
</script>

</body>
</html>
